{"version":3,"sources":["DateTime.jsx","util/firebase.js","util/auth.js","App.js","reportWebVitals.js","index.js"],"names":["DateTime","useState","date","setDate","time","setTime","StringFormatter","s","toString","length","useEffect","setInterval","dateObj","Date","dateValue","getDate","getMonth","getFullYear","getDay","timeValue","getHours","getMinutes","getSeconds","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","this","currentUser","googleId","userName","App","props","progressing","setProgress","check","a","axios","get","loc","console","log","con","trial","doc","document","getElementById","files","window","convert_PDF2JPG","result","dto","Files","alert","className","type","id","accept","onClick","clientId","buttonText","onSuccess","response","onFailure","cookiePolicy","autoLoad","fields","callback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e5e1cba1.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nexport default function DateTime() {\r\n    const [date, setDate] = useState(\"\")\r\n    const [time, setTime] = useState(\"\")\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            const dateObj = new Date()\r\n            const dateValue = StringFormatter(dateObj.getDate()) + \"-\" +\r\n                            StringFormatter(dateObj.getMonth() + 1) + \"-\" +\r\n                            StringFormatter(dateObj.getFullYear()) +\r\n                            \" (\" +StringifyDay(dateObj.getDay())+ \")\";\r\n            const timeValue = StringFormatter(dateObj.getHours()) + \":\" +\r\n                            StringFormatter(dateObj.getMinutes()) + \":\" +\r\n                            StringFormatter(dateObj.getSeconds());\r\n            setDate(dateValue)\r\n            setTime(timeValue)\r\n        },1000)\r\n    },[])\r\n    function StringFormatter(s) {\r\n        s = s.toString()\r\n        if (s.length === 1)\r\n            return \"0\" + s\r\n        else\r\n            return s;\r\n    }\r\n    function StringifyDay(d)\r\n    {\r\n        return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][d]\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                {date}\r\n            </div>\r\n            <div>\r\n                {time}\r\n            </div>\r\n        </>\r\n    )\r\n}","import firebase from \"firebase\";\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyACIdSDRh8etOoR7YPGBifusDZE2iReAt0\",\r\n  authDomain: \"smart-weather-station-a1402.firebaseapp.com\",\r\n  databaseURL: \"https://smart-weather-station-a1402-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"smart-weather-station-a1402\",\r\n  storageBucket: \"smart-weather-station-a1402.appspot.com\",\r\n  messagingSenderId: \"565471199639\",\r\n  appId: \"1:565471199639:web:d40c6ce2d763e890dc44d2\",\r\n  measurementId: \"G-0ZS3LRG115\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport {firebase as  default};","class Auth{\r\n    constructor() {\r\n        this.currentUser = {\r\n            googleId: '',\r\n            userName:''\r\n        };\r\n    }\r\n    login(googleId, userName) {\r\n        this.currentUser.googleId = googleId;\r\n        this.currentUser.userName = userName;\r\n    }\r\n    logout() {\r\n        this.currentUser={}\r\n    }\r\n    isAuthenticated() {\r\n        if (this.currentUser.googleId)\r\n            return this.currentUser;\r\n        else\r\n            return false;\r\n    }\r\n}\r\n\r\nexport default new Auth();","import './App.css';\nimport axios from 'axios'\nimport DateTime from './DateTime';\nimport firebase from './util/firebase';\nimport Auth from './util/auth';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport {useState} from 'react'\n function App(props) {\n  //const SEND_PDF_URL = \"http://127.0.0.1:5000/sendPDF\"\n  const[progressing, setProgress] = useState(false)\n  async function check() {\n    const latitude = 22.5083392;\n    const longitude = 88.3851264;\n    const loc = await axios.get(\"https://api.openweathermap.org/data/2.5/forecast?lat=\" + latitude + \"&lon=\" + longitude + \"&appid=ce0ccefc35026462800861cfe427e2e0\")\n    console.log(loc)\n    const con = await axios.get(\"http://api.countrylayer.com/v2/all?access_key=b0a1d21eb0fd82c5314a0942f09e3c2d\")\n    console.log(con)\n    const trial = await axios.get('/')\n    console.log(trial)\n  }\n   function loginSuccess(response) {\n     console.log(response)\n   }\n   function loginFailure(response) {\n     console.log(response)\n   }\n   function responseFacebook(response) {\n     console.log(response)\n   }\n   async function convert() {\n     check();\n     const doc = document.getElementById(\"doc\").files[0];\n     if (doc) {\n       setProgress(true);\n       const SECRET_KEY = '8Ym4Cmnazv6EV6AO'\n      const result = await window.convert_PDF2JPG(doc,SECRET_KEY)\n       console.log(result.dto.Files)\n       //await axios.post(\"http://localhost:5000/sendPDF\",result.dto.Files)\n       setProgress(false);\n     }\n     else\n       alert(\"No files to convert\")\n     \n   }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n         \n          \n      <input type=\"file\" id=\"doc\" accept=\"application/pdf\"></input>\n        <button id=\"smbt\" onClick={convert} >DO It</button>\n        {progressing && <div>\n        \n          <h3>Wait for process to get over</h3>\n        </div>}\n        ABCDEF\n        <DateTime></DateTime>\n        <GoogleLogin\n          clientId='11409264584-5ibkuddovsved5j7gsv3689dubpp5pju.apps.googleusercontent.com'\n          buttonText=\"Sign in with Google\"\n          onSuccess={loginSuccess}\n          onFailure={loginFailure}\n          cookiePolicy={'single_host_origin'} />\n        <FacebookLogin\n          appId='460427998637578'\n          autoLoad={false}\n          fields=\"name,email,picture\"\n          callback={responseFacebook} />\n        {}\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}